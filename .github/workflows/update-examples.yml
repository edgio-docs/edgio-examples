name: Update Edgio Examples
on:
  workflow_dispatch:

concurrency:
  group: update-examples-${{ github.ref }}
  cancel-in-progress: true

env:
  # Node version for all the jobs
  NODE_VERSION: 16

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setMatrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }} # NODE_VERSION
          registry-url: https://registry.npmjs.org/
      - name: Install @edgio/cli globally
        run: |
          npm install -g @edgio/cli
          npm ci
      - name: Get matrix of examples
        id: setMatrix
        run: echo -e "matrix=$(node scripts/helpers/printExamples.js)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-examples:
    name: Update Examples
    needs: prepare
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        example: ${{ fromJson( needs.prepare.outputs.matrix ) }}
    env:
      EXAMPLE_DIR: examples/${{ matrix.example }}
    steps:
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-examples-node-modules-${{ matrix.example }}-node16-v2
        with:
          path: |
            examples/${{ matrix.example }}/node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles(format('examples/{0}/package-lock.json', matrix.test), 'packages/*/package-lock.json') }}

      - name: Update Examples
        run: |
          ls -al
          npm run update-edgio ${{ env.EXAMPLE_DIR }}

      - name: Check if there are modified files
        id: status
        run: |
          # Check if the git status is clean
          if [ -z "$(git status --porcelain)" ]; then
            echo "No modified files"
            # Set a variable to indicate that there are no modified files
            echo "NO_MODIFIED_FILES=true" >> $GITHUB_OUTPUT
          else
            echo "Modified files"
            # Set a variable to indicate that there are modified files
            echo "NO_MODIFIED_FILES=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit changes
        if: steps.status.outputs.NO_MODIFIED_FILES == 'false'
        run: |
          git checkout -b update-edgio || git checkout update-edgio
          git add .
          git commit -m "Update ${{ matrix.example }}"

  create-pr:
    name: Create PR
    needs: update-examples
    runs-on: ubuntu-latest
    steps:
      - name: Create PR
        uses: peter-evans/create-pull-request@v3
        with:
          base: ${{ github.repository.default_branch }}
          head: update-edgio
          owner: ${{ github.repository.owner.name }}
          repo: ${{ github.repository.name }}
          commit-message: Update Edgio Examples
          title: Update Edgio Examples
          body: |
            Update Edgio Examples

          labels: |
            update-edgio
          reviewers: |
            edgio-bot
          assignees: |
            edgio-bot
          draft: true
